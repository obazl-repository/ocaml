load("//bzl:rules.bzl",
     "boot_library",
     "boot_module",
)

MODULE_OPTS = ["-nostdlib"]

boot_library(
    name = "toplevel_native_lib",
    manifest = [
        ":Topeval",
        ":Topmain",
        ":Trace",
    ],
)

boot_module(
    name   = "Topeval",
    struct = "topeval.ml",
    opts = MODULE_OPTS,
    deps   = [
        ":Topcommon", ## (Toplevel Topcommon)
        "//utils:Warnings",
        "//typing:Types",
        "//typing:Typemod",
        "//typing:Typedtree",
        "//typing:Typecore",
        "//lambda:Translmod",
        "//stdlib:Stdlib.Sys",
        "//lambda:Simplif",
        "//asmcomp:Proc",
        "//typing:Printtyped",
        "//typing:Printtyp",
        "//lambda:Printlambda",
        "//stdlib:Stdlib.Printf",
        "//typing:Predef",
        "//parsing:Parsetree_cmi",
        "//typing:Outcometree_cmi",
        "//stdlib:Stdlib.Option",
        "//stdlib:Stdlib.Obj",
        "//utils:Misc",
        "//parsing:Location",
        "//utils:Load_path",
        "//typing:Includemod",
        ## (Import_approx)
        "//typing:Ident",
        "//stdlib:Stdlib.Gc",
        "//stdlib:Stdlib.Fun",
        "//stdlib:Stdlib.Format",
        ## (Flambda_middle_end)
        "//stdlib:Stdlib.Filename",
        "//typing:Env",
        ## (Dynlink)
        "//config:Config",
        "//driver:Compmisc",
        "//middle_end:Compilenv",
        ## (Closure_middle_end)
        "//utils:Clflags",
        "//middle_end:Backend_intf_cmi",
        "//parsing:Asttypes_cmi",
        "//parsing:Ast_helper",
        ## (Asmlink)
        ## (Asmgen)
        "//stdlib:Stdlib.Array",
        ## (Arch)
    ]
)

boot_module(
    name   = "Topmain",
    struct = "topmain.ml",
    opts = MODULE_OPTS,
    deps   = [
        ":Native", ## (Toplevel Native Topeval)
        ":Toploop", ## (Toplevel Toploop)
        ":Topcommon", ## (Toplevel Topcommon)
        "//stdlib:Stdlib.Sys",
        "//stdlib:Stdlib.Printf",
        "//stdlib:Stdlib.Printexc",
        "//stdlib:Stdlib.Obj",
        "//utils:Misc",
        "//driver:Main_args",
        "//parsing:Location",
        "//stdlib:Stdlib.List",
        "//stdlib:Stdlib.Format",
        "//stdlib:Stdlib.Filename",
        "//driver:Compmisc",
        "//driver:Compenv",
        "//utils:Clflags",
        "//stdlib:Stdlib.Array",
        "//stdlib:Stdlib.Arg",
    ]
)

boot_module(
    name   = "Trace",
    struct = "trace.ml",
    opts = MODULE_OPTS,
    deps   = [
        "//typing:Path",
        "//stdlib:Stdlib.Obj",
    ]
)

