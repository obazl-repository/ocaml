## GENERATED FILE ##

load("//bzl:rules.bzl",
     "ocaml_library",
     "ocaml_module",
)

MODULE_OPTS = ["-nostdlib"]

ocaml_library(
    name = "toplevel_byte_lib",
    modules  = [
        ":Topeval",
        ":Topmain",
        ":Trace",
    ],
)

ocaml_module(
    name   = "Topeval",
    struct = "topeval.ml",
    opts = MODULE_OPTS,
    deps   = [
        ":Topcommon", ## (Toplevel Topcommon)
        "//utils:Warnings",
        "//typing:Types",
        ## (Typemod)
        ## (Typedtree)
        ## (Typecore)
        ## (Translmod)
        "//stdlib:Stdlib.Sys",
        ## (Symtable)
        ## (Simplif)
        ## (Printtyped)
        ## (Printtyp)
        "//lambda:Printlambda",
        ## (Printinstr)
        "//stdlib:Stdlib.Printexc",
        "//typing:Predef",
        ## (Persistent_env)
        "//parsing:Parsetree_cmi",
        ## (Outcometree)
        ## (Opcodes)
        "//stdlib:Stdlib.Obj",
        "//utils:Misc",
        ## (Meta)
        ## (LongString)
        "//parsing:Location",
        "//utils:Load_path",
        "//stdlib:Stdlib.List",
        ## (Includemod)
        "//typing:Ident",
        "//stdlib:Stdlib.Gc",
        ## (Fun)
        "//stdlib:Stdlib.Format",
        ## (Env)
        ## (Emitcode)
        ## (Dll)
        "//utils:Config",
        ## (Compmisc)
        ## (Cmo_format)
        "//utils:Clflags",
        "//stdlib:Stdlib.Char",
        ## (Bytegen)
        "//parsing:Asttypes_cmi",
    ]
)

ocaml_module(
    name   = "Topmain",
    struct = "topmain.ml",
    opts = MODULE_OPTS,
    deps   = [
        ":Byte", ## (Toplevel Byte Trace)
        ":Byte", ## (Toplevel Byte Topeval)
        ":Toploop", ## (Toplevel Toploop)
        ":Topdirs", ## (Toplevel Topdirs)
        ":Topcommon", ## (Toplevel Topcommon)
        "//typing:Types",
        "//stdlib:Stdlib.Sys",
        ## (Printtyp)
        "//stdlib:Stdlib.Printf",
        "//stdlib:Stdlib.Printexc",
        ## (Path)
        "//stdlib:Stdlib.Obj",
        "//utils:Misc",
        ## (Main_args)
        "//parsing:Location",
        "//stdlib:Stdlib.List",
        "//stdlib:Stdlib.Format",
        "//stdlib:Stdlib.Filename",
        ## (Env)
        ## (Ctype)
        ## (Compmisc)
        ## (Compenv)
        "//utils:Clflags",
        "//stdlib:Stdlib.Array",
        "//stdlib:Stdlib.Arg",
    ]
)

ocaml_module(
    name   = "Trace",
    struct = "trace.ml",
    opts = MODULE_OPTS,
    deps   = [
        ":Byte", ## (Toplevel Byte Topeval)
        ":Topcommon", ## (Toplevel Topcommon)
        "//typing:Types",
        ## (Printtyp)
        "//typing:Predef",
        ## (Path)
        "//stdlib:Stdlib.Obj",
        "//utils:Misc",
        ## (Meta)
        "//parsing:Longident",
        "//stdlib:Stdlib.Format",
        ## (Ctype)
        "//parsing:Asttypes_cmi",
    ]
)

