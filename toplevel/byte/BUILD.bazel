exports_files(["topeval.ml", "topmain.ml", "trace.ml"])

# load("//bzl:rules.bzl",
#      "boot_library",
#      "compiler_module",
# )

# load("//config:CONFIG.bzl",
#      "ROOT_MODULE_OPTS",
#      "ROOT_SIG_OPTS"
#      )


# MODULE_OPTS = ROOT_MODULE_OPTS
# SIG_OPTS    = ROOT_MODULE_OPTS # + ["-nopervasives"]



# boot_library(
#     name = "byte",
#     manifest  = [
#         ":Topeval",
#         ":Topmain",
#         ":Trace",
#     ],
# )

# compiler_module(
#     name   = "Topeval",
#     struct = "topeval.ml",
#     sig    = "//toplevel:Topeval_cmi",
#     opts = MODULE_OPTS,
#     deps   = [
#         "//bytecomp:Bytegen",
#         "//bytecomp:Dll",
#         "//bytecomp:Emitcode",
#         "//bytecomp:Meta",
#         "//bytecomp:Opcodes",
#         "//bytecomp:Printinstr",
#         "//bytecomp:Symtable",
#         "//driver:Compmisc",
#         "//file_formats:Cmo_format_cmi",
#         "//lambda:Printlambda",
#         "//lambda:Simplif",
#         "//lambda:Translmod",
#         "//parsing:Asttypes_cmi",
#         "//parsing:Location",
#         "//parsing:Parsetree_cmi",
#         "//stdlib:Stdlib.Char",
#         "//stdlib:Stdlib.Format",
#         "//stdlib:Stdlib.Fun",
#         "//stdlib:Stdlib.Gc",
#         "//stdlib:Stdlib.List",
#         "//stdlib:Stdlib.Obj",
#         "//stdlib:Stdlib.Printexc",
#         "//stdlib:Stdlib.Sys",
#         "//toplevel:Topcommon",
#         "//typing:Env",
#         "//typing:Ident",
#         "//typing:Includemod",
#         "//typing:Outcometree_cmi",
#         "//typing:Persistent_env",
#         "//typing:Predef",
#         "//typing:Printtyp",
#         "//typing:Printtyped",
#         "//typing:Typecore",
#         "//typing:Typedtree",
#         "//typing:Typemod",
#         "//typing:Types",
#         "//utils:Clflags",
#         "//config:Config",
#         "//utils:Load_path",
#         "//utils:Misc",
#         "//utils:Warnings",
#         #### (LongString)
#     ],
#     visibility = ["//toplevel:__pkg__"]
# )

# compiler_module(
#     name   = "Topmain",
#     struct = "topmain.ml",
#     sig    = "//toplevel:Topmain_cmi",
#     opts = MODULE_OPTS,
#     deps   = [
#         ":Trace",
#         ":Topeval",
#         "//toplevel:Toploop",
#         "//toplevel:Topdirs",
#         "//toplevel:Topcommon",
#         "//typing:Types",
#         "//stdlib:Stdlib.Sys",
#         "//typing:Printtyp",
#         "//stdlib:Stdlib.Printf",
#         "//stdlib:Stdlib.Printexc",
#         "//typing:Path",
#         "//stdlib:Stdlib.Obj",
#         "//utils:Misc",
#         "//driver:Main_args",
#         "//parsing:Location",
#         "//stdlib:Stdlib.List",
#         "//stdlib:Stdlib.Format",
#         "//stdlib:Stdlib.Filename",
#         "//typing:Env",
#         "//typing:Ctype",
#         "//driver:Compmisc",
#         "//driver:Compenv",
#         "//utils:Clflags",
#         "//stdlib:Stdlib.Array",
#         "//stdlib:Stdlib.Arg",
#     ],
#     visibility = ["//toplevel:__pkg__"]
# )

# compiler_module(
#     name   = "Trace",
#     struct = "trace.ml",
#     sig    = "//toplevel:Trace_cmi",
#     opts = MODULE_OPTS,
#     deps   = [
#         ":Topeval",
#         "//toplevel:Topcommon", ## (Toplevel Topcommon)
#         "//typing:Types",
#         "//typing:Printtyp",
#         "//typing:Predef",
#         "//typing:Path",
#         "//stdlib:Stdlib.Obj",
#         "//utils:Misc",
#         "//bytecomp:Meta",
#         "//parsing:Longident",
#         "//stdlib:Stdlib.Format",
#         "//typing:Ctype",
#         "//parsing:Asttypes_cmi",
#     ],
#     visibility = ["//toplevel:__pkg__"]
# )

