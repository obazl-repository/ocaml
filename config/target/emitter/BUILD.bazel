load("@bazel_skylib//rules:common_settings.bzl",
     "bool_flag",
     "string_flag", "string_setting")

string_flag( name = "emitter",
             values = ["boot", "baseline", "vm", "sys",
                       "null", ## used only by reset_cc_config_transition
                       "unspecified"],
             build_setting_default = "boot",
             visibility = [
                 "//boot:__pkg__",
                 "//bytecomp:__pkg__",
                 "//config:__pkg__",
                 "//lambda:__pkg__",
                 "//runtime:__subpackages__",
                 "//stdlib:__pkg__",
                 "//toolchain/adapter:__subpackages__",
                 "//utils:__pkg__",
                 "//vendor/mustach:__pkg__"
             ])

config_setting(name = "boot_emitter?", flag_values = {":emitter": "boot"})
config_setting(name = "baseline_emitter?",
               flag_values = {":emitter": "baseline"})
config_setting(name = "vm_emitter?", flag_values = {":emitter": "vm"})
config_setting(name = "sys_emitter?", flag_values = {":emitter": "sys"})

config_setting(name = "unspecified_emitter?", flag_values = {":emitter": "unspecified"})

# target_emitter_constraint(
#     name = "xemitter",
#     build_setting_default = "null",
#     constraint = select({
#         "//platform/constraints/ocaml/emitter:sys_emitter?": "sys",
#         "//platform/constraints/ocaml/emitter:vm_emitter?": "vm",
#         "//conditions:default": "NULL"
#     }),
#     visibility = ["//visibility:public"]
# )

# load("//config:BUILD.bzl", "emitter_setting")

# emitter_setting(
#     name = "emitter",
#     build_setting_default = "null",
#     emitter = select({
#         "//platform/constraints/ocaml/build/emitter:sys?": "sys",
#         "//platform/constraints/ocaml/build/emitter:vm?": "vm",
#         "//conditions:default": None
#     }),
#     visibility = ["//visibility:public"]
# )
