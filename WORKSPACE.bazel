## DO NOT DO THIS: workspace(name = "ocaml")
## (the obazl ruleset already defines @ocaml)

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

load("//:WORKSPACE.bzl", "obazl_deps")
obazl_deps()

# load("//bzl:rules.bzl",
#      "new_local_pkg_repository")

#################################################
# load("@opam//:WORKSPACE.bzl", "opam_fetch_repos")
# opam_fetch_repos()

# for re2c in tools_opam update tool:
# load("@rules_foreign_cc//foreign_cc:repositories.bzl", "rules_foreign_cc_dependencies")
# rules_foreign_cc_dependencies()

# load("@obazl_rules_ocaml//ocaml:bootstrap.bzl", "ocaml_configure")
# ocaml_configure(switch = "4.10", bootstrap = True)

# load("//bzl/toolchain:BUILD.bzl", "bootstrap_register_toolchains")
# bootstrap_register_toolchains(installation="host")

# Tell Bazel about our toolchains so it can resolve them based on values passed
# in --platform, --host_platform, and --execution_platforms options.
register_toolchains(
    "//bzl/toolchain:bootstrap_macos",
    # "//bzl/toolchain:bootstrap_macos_native"
)

# register_execution_platforms(
#     "//bzl/platforms:mac_bytecode",
#     "//bzl/platforms:mac_native"
# )
