load("//bzl:rules.bzl",
     "boot_library",
     "compiler_module",
     "compiler_signature",
)

load("//config:CONFIG.bzl",
     "OC_COMMON_CFLAGS",
     "PLATFORM_CFLAGS")

MODULE_OPTS = []
SIG_OPTS    = []

STDLIB = ["//boot/lib:stdlib"]

boot_library(
    name = "closure",
    manifest  = [
        ":Closure",
        ":Closure_middle_end",
    ],
)

compiler_module(
    name   = "Closure",
    struct = "closure.ml",
    sig    = "Closure_cmi",
    opts = MODULE_OPTS,
    deps   = [
        "//config:Config",
        "//lambda:Debuginfo",
        "//lambda:Lambda",
        "//lambda:Simplif",
        "//lambda:Switch",
        "//middle_end:Backend_var",
        "//middle_end:Clambda",
        "//middle_end:Clambda_primitives",
        "//middle_end:Compilenv",
        "//middle_end:Convert_primitives",
        "//middle_end:Semantics_of_primitives",
        "//parsing:Location",
        "//typing:Env",
        "//typing:Ident",
        "//typing:Primitive",
        "//utils:Clflags",
        "//utils:Misc",
        "//utils:Numbers",
        "//utils:Warnings",
    ],
    stdlib_deps = [
        "//stdlib:Stdlib.Array",
        "//stdlib:Stdlib.Char",
        "//stdlib:Stdlib.Int32",
        "//stdlib:Stdlib.Int64",
        "//stdlib:Stdlib.List",
        "//stdlib:Stdlib.Nativeint",
        "//stdlib:Stdlib.Option",
        "//stdlib:Stdlib.String",
        "//stdlib:Stdlib.Sys",
    ],
    visibility = ["//middle_end:__pkg__"]
)

compiler_signature(
    name = "Closure_cmi",
    src  = "closure.mli",
    opts = SIG_OPTS,
    deps   = [
        "//middle_end:Backend_intf_cmi",
        "//middle_end:Clambda_cmi",
        "//parsing:Asttypes_cmi",
    ]
)

compiler_module(
    name   = "Closure_middle_end",
    struct = "closure_middle_end.ml",
    sig    = "Closure_middle_end_cmi",
    opts = MODULE_OPTS,
    deps   = [
        "//middle_end:Clambda",
        "//middle_end:Compilenv",
        "//middle_end:Printclambda",
        "//typing:Ident",
        "//typing:Path",
        "//utils:Clflags",
        ":Closure",
    ],
    stdlib_deps = [
        "//stdlib:Stdlib.Format",
        "//stdlib:Stdlib.List",
    ],
    visibility = [
        "//asmcomp:__pkg__",
        "//driver:__pkg__",
        "//middle_end:__pkg__"
    ]
)

compiler_signature(
    name = "Closure_middle_end_cmi",
    src  = "closure_middle_end.mli",
    opts = SIG_OPTS,
    deps   = [
        "//middle_end:Clambda_cmi",
        "//middle_end:Backend_intf_cmi",
    ],
    stdlib_deps = [
        "//stdlib:Stdlib.Format_cmi",
    ]
)

