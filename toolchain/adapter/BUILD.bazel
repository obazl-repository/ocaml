exports_files(["BUILD.bazel"])

load("//toolchain/adapter:BUILD.bzl", "toolchain_adapter")
load("//toolchain/adapter:DEV_TOOLCHAIN.bzl", "dev_toolchain_adapter")

## NB: these are all the same, but for debugging they need different
## names. Use aliases?

##################
dev_toolchain_adapter(
    name        = "dev",
    copts       = [
        "-nostdlib",  ## inserted by rule
        "-strict-sequence",
        # "-warn-error", "+A",
    ] + select({
        "//config:bin-annot?" : ["-bin-annot"],
        "//conditions:default": []
    }) + select({
        "//config:principal?" : ["-principal"],
        "//conditions:default": []
    }) + select({
        "//config:absname?" : ["-absname"],
        "//conditions:default": []
    }) + select({
        ## FIXME: only for native (sys) targets
        "//config:xmo?" : [],
        "//conditions:default": ["-opaque"]
    }),
    linkopts    = [],
    # warnings  - use defaults
    # primitives  = "//runtime:primitives",
)

##################
toolchain_adapter(
    name        = "default",
    copts       = [
        "-nostdlib",  ## inserted by rule
        "-strict-sequence",
        # "-warn-error", "+A",
    ] + select({
        "//config:bin-annot?" : ["-bin-annot"],
        "//conditions:default": []
    }) + select({
        "//config:principal?" : ["-principal"],
        "//conditions:default": []
    }) + select({
        "//config:absname?" : ["-absname"],
        "//conditions:default": []
    }) + select({
        "//config:xmo?" : [],
        "//conditions:default": ["-opaque"]
    }),
    linkopts    = [],
    # warnings  - use defaults
    # primitives  = "//runtime:primitives",
)

toolchain_adapter(
    name        = "boot",
    copts       = [
        "-nostdlib",  ## inserted by rule
        "-strict-sequence",
        # "-warn-error", "+A",
    ] + select({
        "//config:bin-annot?" : ["-bin-annot"],
        "//conditions:default": []
    }) + select({
        "//config:principal?" : ["-principal"],
        "//conditions:default": []
    }) + select({
        "//config:absname?" : ["-absname"],
        "//conditions:default": []
    }) + select({
        "//config:xmo?" : [],
        "//conditions:default": ["-opaque"]
    }),
    linkopts    = [],
    # warnings  - use defaults
    # primitives  = "//runtime:primitives",
)

toolchain_adapter(
    name        = "ocamlc.byte",
    copts       = [
        "-nostdlib",  ## inserted by rule
        "-strict-sequence",
        # "-warn-error", "+A",
    ] + select({
        "//config:bin-annot?" : ["-bin-annot"],
        "//conditions:default": []
    }) + select({
        "//config:principal?" : ["-principal"],
        "//conditions:default": []
    }) + select({
        "//config:absname?" : ["-absname"],
        "//conditions:default": []
    }) + select({
        "//config:xmo?" : [],
        "//conditions:default": ["-opaque"]
    }),
    linkopts    = [],
    # warnings  - use defaults
    # primitives  = "//runtime:primitives",
)

# alias(name = "boot.ocamlopt.byte", actual = ":ocamlopt.byte")
toolchain_adapter(
    name        = "boot.ocamlopt.byte",
    copts       = [
        "-nostdlib",  ## inserted by rule
        "-strict-sequence",
        # "-warn-error", "+A",
    ] + select({
        "//config:bin-annot?" : ["-bin-annot"],
        "//conditions:default": []
    }) + select({
        "//config:principal?" : ["-principal"],
        "//conditions:default": []
    }) + select({
        "//config:absname?" : ["-absname"],
        "//conditions:default": []
    }) + select({
        "//config:xmo?" : [],
        "//conditions:default": ["-opaque"]
    }),
    linkopts    = [],
    # warnings  - use defaults
    # primitives  = "//runtime:primitives",
)

toolchain_adapter(
    name        = "ocamlopt.byte",
    copts       = [
        "-nostdlib",  ## inserted by rule
        "-strict-sequence",
        # "-warn-error", "+A",
    ] + select({
        "//config:bin-annot?" : ["-bin-annot"],
        "//conditions:default": []
    }) + select({
        "//config:principal?" : ["-principal"],
        "//conditions:default": []
    }) + select({
        "//config:absname?" : ["-absname"],
        "//conditions:default": []
    }) + select({
        "//config:xmo?" : [],
        "//conditions:default": ["-opaque"]
    }),
    linkopts    = [],
    # warnings  - use defaults
    # primitives  = "//runtime:primitives",
)

toolchain_adapter(
    name        = "ocamlopt.opt",
    copts       = [
        "-nostdlib",  ## inserted by rule
        "-strict-sequence",
        # "-warn-error", "+A",
    ] + select({
        "//config:bin-annot?" : ["-bin-annot"],
        "//conditions:default": []
    }) + select({
        "//config:principal?" : ["-principal"],
        "//conditions:default": []
    }) + select({
        "//config:absname?" : ["-absname"],
        "//conditions:default": []
    }) + select({
        "//config:xmo?" : [],
        "//conditions:default": ["-opaque"]
    }),
    linkopts    = [],
    # warnings  - use defaults
    # primitives  = "//runtime:primitives",
)

toolchain_adapter(
    name        = "ocamlc.opt",
    copts       = [
        "-nostdlib",  ## inserted by rule
        "-strict-sequence",
        # "-warn-error", "+A",
    ] + select({
        "//config:bin-annot?" : ["-bin-annot"],
        "//conditions:default": []
    }) + select({
        "//config:principal?" : ["-principal"],
        "//conditions:default": []
    }) + select({
        "//config:absname?" : ["-absname"],
        "//conditions:default": []
    }) + select({
        "//config:xmo?" : [],
        "//conditions:default": ["-opaque"]
    }),
    linkopts    = [],
    # warnings  - use defaults
    # primitives  = "//runtime:primitives",
)

# ##################
# toolchain_adapter(
#     name        = "vv_vv",
#     copts       = [ ## compile opts (sigs/modules only)
#         "-nostdlib",  ## inserted by rule
#         "-strict-sequence",
#         # "-warn-error", "+A",
#     ] + select({
#         "//config:bin-annot?" : ["-bin-annot"],
#         "//conditions:default": []
#     }) + select({
#         "//config:principal?" : ["-principal"],
#         "//conditions:default": []
#     }) + select({
#         "//config:absname?" : ["-absname"],
#         "//conditions:default": []
#     }),
#     linkopts    = [],
#     # warnings  - use defaults
#     # primitives  = "//runtime:primitives",
# )

# toolchain_adapter(
#     name        = "vv_vs",
#     copts       = [ ## compile opts (sigs/modules only)
#         "-nostdlib",  ## inserted by rule
#         "-strict-sequence",
#         # "-warn-error", "+A",
#     ] + select({
#         "//config:bin-annot?" : ["-bin-annot"],
#         "//conditions:default": []
#     }) + select({
#         "//config:principal?" : ["-principal"],
#         "//conditions:default": []
#     }) + select({
#         "//config:absname?" : ["-absname"],
#         "//conditions:default": []
#     }),
#     linkopts    = [],
#     # warnings  - use defaults
#     # primitives  = "//runtime:primitives",
# )

# toolchain_adapter(
#     name        = "vs_ss",
#     copts       = [ ## compile opts (sigs/modules only)
#         "-nostdlib",  ## inserted by rule
#         "-strict-sequence",
#         # "-warn-error", "+A",
#     ] + select({
#         "//config:bin-annot?" : ["-bin-annot"],
#         "//conditions:default": []
#     }) + select({
#         "//config:principal?" : ["-principal"],
#         "//conditions:default": []
#     }) + select({
#         "//config:absname?" : ["-absname"],
#         "//conditions:default": []
#     }),
#     linkopts    = [],
#     # warnings  - use defaults
#     # primitives  = "//runtime:primitives",
# )

# toolchain_adapter(
#     name        = "vs_sv",
#     copts       = [ ## compile opts (sigs/modules only)
#         "-nostdlib",  ## inserted by rule
#         "-strict-sequence",
#         # "-warn-error", "+A",
#     ] + select({
#         "//config:bin-annot?" : ["-bin-annot"],
#         "//conditions:default": []
#     }) + select({
#         "//config:principal?" : ["-principal"],
#         "//conditions:default": []
#     }) + select({
#         "//config:absname?" : ["-absname"],
#         "//conditions:default": []
#     }),
#     linkopts    = [],
#     # warnings  - use defaults
#     # primitives  = "//runtime:primitives",
# )

# toolchain_adapter(
#     name        = "ss_ss",
#     copts       = [ ## compile opts (sigs/modules only)
#         "-nostdlib",  ## inserted by rule
#         "-strict-sequence",
#         # "-warn-error", "+A",
#     ] + select({
#         "//config:bin-annot?" : ["-bin-annot"],
#         "//conditions:default": []
#     }) + select({
#         "//config:principal?" : ["-principal"],
#         "//conditions:default": []
#     }) + select({
#         "//config:absname?" : ["-absname"],
#         "//conditions:default": []
#     }),
#     linkopts    = [],
#     # warnings  - use defaults
#     # primitives  = "//runtime:primitives",
# )

# toolchain_adapter(
#     name        = "ss_sv",
#     copts       = [ ## compile opts (sigs/modules only)
#         "-nostdlib",  ## inserted by rule
#         "-strict-sequence",
#         # "-warn-error", "+A",
#     ] + select({
#         "//config:bin-annot?" : ["-bin-annot"],
#         "//conditions:default": []
#     }) + select({
#         "//config:principal?" : ["-principal"],
#         "//conditions:default": []
#     }) + select({
#         "//config:absname?" : ["-absname"],
#         "//conditions:default": []
#     }),
#     linkopts    = [],
#     # warnings  - use defaults
#     # primitives  = "//runtime:primitives",
# )

# toolchain_adapter(
#     name        = "sv_vv",
#     copts       = [ ## compile opts (sigs/modules only)
#         "-nostdlib",  ## inserted by rule
#         "-strict-sequence",
#         # "-warn-error", "+A",
#     ] + select({
#         "//config:bin-annot?" : ["-bin-annot"],
#         "//conditions:default": []
#     }) + select({
#         "//config:principal?" : ["-principal"],
#         "//conditions:default": []
#     }) + select({
#         "//config:absname?" : ["-absname"],
#         "//conditions:default": []
#     }),
#     linkopts    = [],
#     # warnings  - use defaults
#     # primitives  = "//runtime:primitives",
# )

# toolchain_adapter(
#     name        = "sv_vs",
#     copts       = [ ## compile opts (sigs/modules only)
#         "-nostdlib",  ## inserted by rule
#         "-strict-sequence",
#         # "-warn-error", "+A",
#     ] + select({
#         "//config:bin-annot?" : ["-bin-annot"],
#         "//conditions:default": []
#     }) + select({
#         "//config:principal?" : ["-principal"],
#         "//conditions:default": []
#     }) + select({
#         "//config:absname?" : ["-absname"],
#         "//conditions:default": []
#     }),
#     linkopts    = [],
#     # warnings  - use defaults
#     # primitives  = "//runtime:primitives",
# )

