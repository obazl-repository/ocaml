exports_files(["BUILD.bazel"])

## toolchains where buildhost == bootstrap

load(":BUILD.bzl", "bootstrap_toolchain_adapter")

######## toolchain adapters ########

## The bootstrap compiler is a precompiled vm>vm tool that comes with
## the distribution.
bootstrap_toolchain_adapter(
    name        = "bootstrap",
    build_host  = "vm",
    target_host = "vm",
    ## vm
    tool_runner  = "//boot/bin:ocamlrun", # the vm, implemented in C
    linkmode = "dynamic",
    # repl        = "//toplevel:ocaml", # or ocamlnat
    ## tools
    compiler    = "//boot:ocamlc", # the precompiled vm>vm bootstrap compiler
    lexer       = "//boot:ocamllex",
    yacc        = "//boot/bin:ocamlyacc",
)

## vm>sys (ocamlopt.byte)
bootstrap_toolchain_adapter(
    name      = "stage1",
    tool_runner = "//boot/bin:ocamlrun",
    compiler  = "//boot:ocamlopt",
    linkmode = "dynamic"
)

bootstrap_toolchain_adapter(
    name     = "local",
    tool_runner = "//bin:ocamlrun",
    compiler   = "//bin:ocamlc",
    linkmode = "dynamic"
)

## we don't need separate debug and instrumented adapters
## if we use platforms to select the build variant.
# bootstrap_toolchain_adapter(
#     name     = "debug",
#     ocamlrun = "//boot/bin:ocamlrund",
#     ocamlc   = "//compilers/stage1:ocamlc",
#     linkmode = "dynamic"
# )

# bootstrap_toolchain_adapter(
#     name     = "instrumented",
#     ocamlrun = "//boot/bin:ocamlruni",
#     ocamlc   = "//runtime:ocamlc",
#     linkmode = "dynamic"
# )

