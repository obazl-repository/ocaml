load("//toolchain:BUILD.bzl", "toolchain_selector")

package(default_visibility=["//visibility:public"])

exports_files(glob(["*.bazel"]))

##########
toolchain_selector(
    name           = "bootstrap",
    toolchain = "//toolchain/adapters:bootstrap",
    # build_host_constraints  = [
    #     "//platforms/build:vm?"
    # ],
    # target_host_constraints  = [
    #     "//platforms/target:vm?",
    # ],
    # toolchain_constraints = ["//runtime:bootstrap?"],
)

##########
toolchain_selector(
    name           = "local",
    toolchain = "//toolchain/adapters:local",
    # toolchain      = "@ocaml//toolchain/adapters/local:sysvm",
    build_host_constraints  = [
        # "@ocaml//platforms:vm?"
        "@platforms//os:macos",
    ],
    target_host_constraints  = [
        # "@ocaml//platforms:vm?"
        "@platforms//os:macos",
    ],
    toolchain_constraints = ["//runtime:standard?"],
)

##########
toolchain_selector(
    name           = "dbg",
    toolchain = "//toolchain/adapters:debug",
    build_host_constraints  = [
        # "@ocaml//platforms:sys?"
        "@platforms//os:macos"
    ],
    target_host_constraints  = [
        # "@ocaml//platforms:sys?"
        "@platforms//os:macos"
    ],
    toolchain_constraints = ["//runtime:debug?"],
)

##########
toolchain_selector(
    name                    = "instrumented",
    toolchain = "//toolchain/adapters:instrumented",
    build_host_constraints  = [
        # "@ocaml//platforms:sys?"
        "@platforms//os:macos",
    ],
    target_host_constraints  = [
        # "@ocaml//platforms:vm?"
        "@platforms//os:macos",
    ],
    toolchain_constraints = ["//runtime:instrumented?"],
)
