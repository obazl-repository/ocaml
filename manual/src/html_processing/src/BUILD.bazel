## GENERATED FILE ##

load("//bzl:rules.bzl",
     "ocaml_library",
     "ocaml_module",
)

MODULE_OPTS = ["-nostdlib"]

ocaml_library(
    name = "manual_src_html_processing_src_lib",
    modules  = [
        ":Common",
        ":Process_api",
        ":Process_manual",
    ],
)

ocaml_module(
    name   = "Common",
    struct = "common.ml",
    opts = MODULE_OPTS,
    deps   = [
        "//stdlib:Stdlib.Sys",
        "//stdlib:Stdlib.String",
        ## (Soup)
        ## (Scanf)
        "//stdlib:Stdlib.Printf",
        "//stdlib:Stdlib.Option",
        "//stdlib:Stdlib.List",
        "//stdlib:Stdlib.Filename",
        "//stdlib:Stdlib.Array",
    ]
)

ocaml_module(
    name   = "Process_api",
    struct = "process_api.ml",
    opts = MODULE_OPTS,
    deps   = [
        ":Src", ## (Manual Src Html_processing Src Common)
        ## (Unix)
        "//stdlib:Stdlib.Sys",
        "//stdlib:Stdlib.String",
        ## (Soup)
        ## (Re)
        ## (R)
        "//stdlib:Stdlib.Printf",
        "//stdlib:Stdlib.Option",
        "//stdlib:Stdlib.List",
        "//stdlib:Stdlib.Hashtbl",
        "//stdlib:Stdlib.Filename",
        "//stdlib:Stdlib.Array",
    ]
)

ocaml_module(
    name   = "Process_manual",
    struct = "process_manual.ml",
    opts = MODULE_OPTS,
    deps   = [
        ":Src", ## (Manual Src Html_processing Src Common)
        "//stdlib:Stdlib.Sys",
        "//stdlib:Stdlib.String",
        ## (Soup)
        ## (Re)
        ## (R)
        "//stdlib:Stdlib.Printf",
        "//stdlib:Stdlib.Option",
        "//stdlib:Stdlib.List",
        "//stdlib:Stdlib.Hashtbl",
    ]
)

