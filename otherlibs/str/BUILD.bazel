load("//bzl:rules.bzl",
     "bootstrap_archive",
     "bootstrap_module",
     "bootstrap_signature",
)

load("//config:CONFIG.bzl", "ROOT_MODULE_OPTS", "ROOT_SIG_OPTS")

MODULE_OPTS = ROOT_MODULE_OPTS
SIG_OPTS = ROOT_SIG_OPTS

STDLIB = ["//boot:stdlib"]

# LIBNAME=str
# COBJS=strstubs.$(O)
# CLIBNAME=camlstr
# CAMLOBJS=str.cmo

bootstrap_archive(  ## mklib -o
    name = "str",
    opts = ["-linkall"],
    manifest = [
        ":Str",
    ],
    cc_deps = {":camlstr" : "shared"}
)

# ../../ocamlc.opt -nostdlib -I ../../stdlib -c -absname -w +a-4-9-41-42-44-45-48 -warn-error +A -bin-annot -g -safe-string -strict-sequence -strict-formats  str.ml

bootstrap_module(
    name   = "Str",
    struct = "str.ml",
    sig    = "Str_cmi",
    opts = MODULE_OPTS,
    deps   = STDLIB + [
        "//stdlib:Stdlib.String",
        "//stdlib:Stdlib.Map",
        "//stdlib:Stdlib.List",
        "//stdlib:Stdlib.Int",
        "//stdlib:Stdlib.Char",
        "//stdlib:Stdlib.Bytes",
        "//stdlib:Stdlib.Buffer",
        "//stdlib:Stdlib.Array",
    ],
    visibility = ["//tools:__pkg__"]
)

# ../../ocamlc.opt -nostdlib -I ../../stdlib -c -absname -w +a-4-9-41-42-44-45-48 -warn-error +A -bin-annot -g -safe-string -strict-sequence -strict-formats  str.mli

bootstrap_signature(
    name = "Str_cmi",
    src  = "str.mli",
    opts = SIG_OPTS,
    deps   = STDLIB + [
    ]
)

################################################################
# gcc -c -O2 -fno-strict-aliasing -fwrapv -pthread -Wall -Wdeclaration-after-statement -Werror -fno-common -g    -D_FILE_OFFSET_BITS=64 -DCAML_NAME_SPACE  -I../../runtime   \
# 	  -o strstubs.o strstubs.c

## WARN: for shared lib, ocaml wants 'dllcamlstr.so' but bazel only
## does 'libcamlstr.so.
cc_library(
    name = "camlstr",
    srcs = [
        "strstubs.c",
        "//runtime/caml:alloc.h",
        "//runtime/caml:compatibility.h",
        "//runtime/caml:config.h",
        "//runtime/caml:domain.h",
        "//runtime/caml:domain_state.h",
        "//runtime/caml:fail.h",
        "//runtime/caml:m.h",
        "//runtime/caml:memory.h",
        "//runtime/caml:misc.h",
        "//runtime/caml:mlvalues.h",
        "//runtime/caml:s.h",
    ],
    copts = ["-I", "runtime", "-I", "runtime/caml"],
    hdrs = ["//runtime/caml:domain_state.tbl"]
)
