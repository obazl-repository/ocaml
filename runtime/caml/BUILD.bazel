load("//bzl:rules.bzl",
     "mustache"
)

exports_files(glob(["**"]))

# filegroup(
#     name = "hdr_srcs",
#     srcs = glob(
#         ["*.h"], exclude=["s.h", "opnames.h", "jumptbl.h"]
#     ) + ["domain_state.tbl"],
#     visibility = ["//runtime/caml/cross-compile:__pkg__"]
# )

# alias(
#     name = "hdrs",
#     actual = "//runtime/caml/cross-compile:hdrs",
#     visibility = [
#         "//boot:__pkg__",
#         "//runtime:__pkg__",
#         "//otherlibs/systhreads:__pkg__",
#         "//otherlibs/unix:__pkg__",
#         "//yacc:__pkg__"
#     ],
# )

mustache(
    name = "domain_state_h",
    out  = "domain_state.h",
    json = "domain_state.json",
    template = "domain_state.h.mustache",
    visibility = [
        "//runtime:__subpackages__"
    ]
)

mustache(
    name = "instruct_h",
    out  = "instruct.h",
    json = "//bytecomp:opcodes.json",
    template = "instruct.h.mustache",
    visibility = [
        "//runtime:__subpackages__",
        "//tools:__pkg__"
    ]
)

mustache(
    name = "jumptbl_h",
    out  = "jumptbl.h",
    json = "//bytecomp:opcodes.json",
    template = "jumptbl.h.mustache",
    visibility = [
        # "//runtime:__subpackages__"
    ]
)

mustache(
    name = "opnames_h",
    out  = "opnames.h",
    json = "//bytecomp:opcodes.json",
    template = "opnames.h.mustache",
    visibility = [
        # "//runtime:__subpackages__"
    ]
)

genrule(
    name = "platform_s.h",
    outs = ["s.h"],
    srcs = select({
        # FIXME: if targethost = buildhost, use s.local.h
        "//platform/os:linux?": ["//runtime/caml:s.linux.h"],
        "//platform/os:macos?": ["//runtime/caml:s.macos.h"]
        # "//conditions:default": [],
    }),
    cmd  = "cp $(SRCS) $@", #FIXME: symlink?
    visibility = [
        "//runtime:__pkg__",
        "//utils:__pkg__"
    ]
)

cc_library(
    name = "hdrs",
    hdrs = glob(
        ["*.h"]
    ) + [
        ":domain_state.h",
        ":jumptbl.h",
        ":opnames.h",
        ":s.h"
    ],
    include_prefix = "caml",
    visibility = ["//visibility:public"]
)
