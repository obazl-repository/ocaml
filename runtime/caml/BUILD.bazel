
exports_files([
    # most of these for otherlibs/str/strstubs.c
    "alloc.h",
    "config.h",
    "domain.h",
    "domain_state.h",
    "domain_state.tbl",
    "compatibility.h",
    "fail.h",
    "m.h",
    "memory.h",
    "misc.h",
    "mlvalues.h",
    "s.h",
    ## used by //bytecomp:opcodes_ml:
    "instruct.h"
])

# GENERATED_HEADERS := caml/opnames.h caml/version.h caml/jumptbl.h build_config.h

genrule(
    name = "opnames_h",
    outs = ["opnames.h"],
    srcs = ["//runtime/caml:instruct.h"],
    cmd  = " ".join([
	    # tr is for window only?
        # 	tr -d '\r' < $< | \
        "cat $(location //runtime/caml:instruct.h) | ",
	    "sed -e '/\\/\\*/d' ",
	    "-e '/^#/d'",
	    "-e 's/enum /static char * names_of_/' ",
	    "-e 's/{$$/[] = {/' ",
	    "-e 's/\\([[:upper:]][[:upper:]_0-9]*\\)/\"\\1\"/g' > $@"
    ])
)

genrule(
    name = "jumptbl_h",
    outs = ["jumptbl.h"],
    srcs = ["//runtime/caml:instruct.h"],
    cmd  = " ".join([
	    "tr -d '\\r' < $(location //runtime/caml:instruct.h) | ",
	    "sed -n -e '/^  /s/ \\([A-Z]\\)/ \\&\\&lbl_\\1/gp' ",
	    "-e '/^}/q' > $@"
    ])
)

## WARNING: if you build with make, these generated files will be
## generated and placed in the source tree, so when you then build
## with Bazel you'll get an error about file already existing.
## In that case just delete the generated files in runtime/.
cc_library(
    name = "hdrs",
    hdrs = [
        "domain_state.tbl",
        # ## generated files:
        ":opnames.h",
        ":jumptbl.h",
    ] + glob(["*.h"]),
    include_prefix = "caml",
    # hdrs = ["domain_state.tbl"],
    # static_library = ...,
    visibility = ["//runtime:__pkg__", "//yacc:__pkg__"],
)

