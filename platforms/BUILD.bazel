exports_files(["BUILD.bazel"])

package(default_visibility = ["//visibility:public"])

################################################################
#### local cross-compilation target platforms
# inherit from local config platform, so runtime always matches local
# platform.

platform(name = "sys_vm_vm",    # ocamlc.byte
         parents = ["@local_config_platform//:host"],
         exec_compatible_with = [
             # not compatible with //platforms:boot?
             "//platforms:vm?", "//platforms:sys?"

         ],
         constraint_values = [
             # "@platforms//os:linux", "@platforms//cpu:x86_64",
             "//platforms/ocaml/executor:vm?",
             "//platforms/ocaml/emitter:vm?"])

platform(name = "sys_vm_sys",   # ocamlopt.byte
         parents = ["@local_config_platform//:host"],
         constraint_values = [
             # "@platforms//os:linux", "@platforms//cpu:x86_64",
             "//platforms/ocaml/executor:vm?",
             "//platforms/ocaml/emitter:sys?"])

platform(name = "sys_sys_sys",   # ocamlopt.opt
         parents = ["@local_config_platform//:host"],
         constraint_values = [
             # "@platforms//os:linux", "@platforms//cpu:x86_64",
             "//platforms/ocaml/executor:sys?",
             "//platforms/ocaml/emitter:sys?"])

platform(name = "sys_sys_vm",   # ocamlc.opt
         parents = ["@local_config_platform//:host"],
         constraint_values = [
             # "@platforms//os:linux", "@platforms//cpu:x86_64",
             "//platforms/ocaml/executor:sys?",
             "//platforms/ocaml/emitter:vm?"])

################################################################
#### cross-platform cross-compilation
# targeting a system other than the local host

platform(name = "linux_amd64_vm_vm", # ocamlc.byte on amd64 runtime
         parents = ["@local_config_platform//:host"],
         constraint_values = [
             "@platforms//os:linux", "@platforms//cpu:x86_64",
             "//platforms/ocaml/executor:vm",
             "//platforms/ocaml/emitter:vm"])


################################################################
constraint_setting(name = "platform",
                   default_constraint_value = ":boot?")

# constraint_setting(name = "xtarget")

constraint_value(name = "boot?",   constraint_setting = ":platform")
platform(name = "boot",
         parents = ["@local_config_platform//:host"],
         # exec_compatible_with = [":vm?"],
         constraint_values = [":boot?"])

constraint_value(name = "vm?", constraint_setting = ":platform")
platform(name = "vm",
         parents = ["@local_config_platform//:host"],
         constraint_values = [":vm?"])

constraint_value(name = "sys?",   constraint_setting = ":platform")
platform(name = "sys",
         parents = ["@local_config_platform//:host"],
         constraint_values = [":sys?"])


# constraint_value(name = "dev?",   constraint_setting = ":platform")
# platform(name = "dev",
#          parents = ["@local_config_platform//:host"],
#          constraint_values = [":dev?"])

# platform(name = "default", parents = ["@local_config_platform//:host"])

################################################################
config_setting(name = "linux_amd64?",
               constraint_values = ["@platforms//cpu:amd64",
                                    "@platforms//os:linux"])
config_setting(name = "macos_amd64?",
               constraint_values = ["@platforms//cpu:amd64",
                                    "@platforms//os:macos"])

alias(name = "linux_x86_64?", actual = ":linux_amd64")
alias(name = "macos_x86_64?", actual = ":macos_amd64")

config_setting(name = "linux_x86_32?",
               constraint_values = ["@platforms//cpu:x86_32",
                                    "@platforms//os:linux"])
config_setting(name = "macos_x86_32?",
               constraint_values = ["@platforms//cpu:x86_32",
                                    "@platforms//os:macos"])

config_setting(name = "linux_arm64?",
               constraint_values = ["@platforms//cpu:arm64",
                                    "@platforms//os:linux"])
config_setting(name = "macos_arm64?",
               constraint_values = ["@platforms//cpu:arm64",
                                    "@platforms//os:macos"])

config_setting(name = "windows_x86_32?",
               constraint_values = ["@platforms//cpu:x86_32",
                                    "@platforms//os:windows"])


