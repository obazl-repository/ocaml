package(default_visibility = ["//visibility:public"])

load("//bzl:rules.bzl", "ocaml_compiler")

## FIXME: suppport ocamlcp.[byte|opt], ocamloptp.[byte|opt]
## FIXME: support flambda
ocaml_compiler(
    name = "ocamlcc",
    opts = [ ] + select({
        # ocamlc.byte: ["-compat-32"]
        "//conditions:default": []
    }) + [
        # "-verbose",
        ## for testing (linux):
        # "-cc", "gcc",  ## cancels mkexe
        # "-ccopt", "-B/usr/bin",
        # "-ccopt", "-B/usr/lib",
        # "-ccopt", "-B/usr/lib/gcc/x86_64-linux-gnu/9",
        ## bazel-generated args:
        # "-ccopt", "-fuse-ld=gold",
        # "-ccopt", "-fno-use-linker-plugin",
        # "-ccopt", "-Wl,-no-as-needed",
        # "-ccopt", "-Wl,-z,relro,-z,now",
        # "-ccopt", "-pass-exit-codes",
        # "-ccopt", "-lstdc++",

        # "-ccopt", "-Wl,-export_dynamic",
        # "-ccopt", "-Wl,-all_load"
    ] + select({
        "//platform/target/os:linux?": [
            "-cclib", "-lm",
            "-cclib", "-ldl",
            "-cclib", "-lpthread",
        ],
        "//conditions:default": []
    }),
    cc_linkopts = select({
        "@platforms//os:macos": [ ## FIXME: default tc, not zig
            # "-Wl,-v", # prints config, search paths
            # "-Wl,-print_statistics", # -Wl,-v plus timings, mem, etc.
            # "-t", # -Wl-v plus logs each file the linker loads.
            # "-why_load" # Log why each object file in a static library
            #             # is loaded. That is, what symbol was needed.
            ## zig linker opts
            # "-v",
            ],
        "@platforms//os:linux": [
            # "-Wl,--verbose"
            ##FIXME: depends on linker used (bfd, gold, etc.)
        ]
    }),
    prologue = ["//compilerlibs:ocamlcommon",
                ] + select({
        # "//config/target:baseline_vm?": ["//bytecomp:ocamlbytecomp"],
        # "//config/target:baseline_sys?": ["//asmcomp:ocamloptcomp"],
        # "//config/target:ult_sys?": ["//asmcomp:ocamloptcomp"],

        "//config/target/emitter:sys_emitter?": ["//asmcomp:ocamloptcomp"],

        # "//toolchain/target/emitter:sys_emitter?": ["//asmcomp:ocamloptcomp"],
        "//conditions:default": ["//bytecomp:ocamlbytecomp"]
    }),
    main = select({
        # "//config/target:baseline_vm?": "//driver:Main",
        # "//config/target:baseline_sys?": "//driver:Optmain",
        # "//config/target:ult_sys?": "//driver:Optmain",

        "//config/target/emitter:sys_emitter?": "//driver:Optmain",
        # "//toolchain/target/emitter:sys_emitter?": "//driver:Optmain",

        "//conditions:default": "//driver:Main"
    }),
    # cc_deps = ["//runtime:asmrun"],
    visibility             = ["//visibility:public"]
)

