load("@bazel_skylib//rules:diff_test.bzl", "diff_test")
load("//test:rules.bzl",
     "module_program_tests",
     "test_module",
     "batch_tests",
     "inline_expect_module",
     # "inline_expect_test",
)
load("//test/rules:inline_expect_module.bzl", "inline_expect_test")

load("//config:WARNINGS.bzl", "w")

test_suite(
    name = "lib-arg",
    tests  = [
        ":Test_rest_all_test",
        ":Testarg_tests",
        ":Testerror_tests",
    ],
)

inline_expect_test(
    name   = "Test_rest_all_test",
    struct = "test_rest_all.ml",
    stdlib_deps = [
        "//stdlib:Stdlib.Arg",
        "//stdlib:Stdlib",
    ],
)

# diff_test(
#     name = "Test_rest_all_test",
#     file1 = "test_rest_all.ml",
#     file2 = ":Test_rest_all",
#     timeout = "short",
#     tags = ["inline_expect"]
# )

# inline_expect_module(
#     name   = "Test_rest_all",
#     struct = "test_rest_all.ml",
#     stdlib_deps = [
#         "//stdlib:Stdlib.Arg",
#         "//stdlib:Stdlib",
#     ],
#     # timeout = "short"
# )

#####################
module_program_tests(
    name              = "Testarg_tests",
    structfile        = "testarg.ml",
    warnings = {"disable": ["missing-mli"]},
    stdlib_deps   = [
        "//stdlib:Stdlib.Arg",
        "//stdlib:Stdlib.Printf"
    ],
    stdout_expected   = "testarg.reference",
)

#####################
module_program_tests(
    name              = "Testerror_tests",
    structfile        = "testerror.ml",
    warnings = {"disable": ["unexpected-docstring", "missing-mli"]},
    stdlib_deps   = [
        "//stdlib:Stdlib.Arg",
        "//stdlib:Stdlib.Array"
    ],
    stdout_expected   = "testerror.reference",
)
