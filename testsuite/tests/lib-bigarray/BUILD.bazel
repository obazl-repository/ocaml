load("//test:rules.bzl", "test_module", "expect_test")

test_suite(
    name = "tests",
    tests  = [
        ":Bigarrays_test",
        ":Change_layout_test",
        ":Fftba_test",
        ":Pr5115_test",
        ":Weak_bigarray_test",
    ],
)

expect_test(
    name    = "Bigarrays_test",
    stdout  = "Bigarrays.stdout",
    expected= "bigarrays.reference",
    test_module = ":Bigarrays",
    timeout = "short"
)

test_module(
    name   = "Bigarrays",
    struct = "bigarrays.ml",
    stdlib_deps   = [
        "//stdlib:Stdlib.Bigarray",
        "//stdlib:Stdlib.Filename",
        "//stdlib:Stdlib.Gc",
        "//stdlib:Stdlib.Int64",
        "//stdlib:Stdlib.Printf"
    ]
)

expect_test(
    name     = "Change_layout_test",
    stdout   = "change_layout.stdout",
    expected = "change_layout.reference",
    test_module = ":Change_layout",
    timeout  = "short"
)

test_module(
    name   = "Change_layout",
    struct = "change_layout.ml",
    stdlib_deps   = [
        "//stdlib:Stdlib.Bigarray",
        "//stdlib:Stdlib.Format",
    ]
)

expect_test(
    name     = "Fftba_test",
    stdout   = "fftba.stdout",
    expected = "fftba.reference",
    test_module = ":Fftba",
    timeout  = "short"
)

test_module(
    name   = "Fftba",
    struct = "fftba.ml",
    stdlib_deps   = ["//stdlib:Stdlib.Bigarray"]
)

expect_test(
    name     = "Pr5115_test",
    stdout   = "pr5115.stdout",
    expected = "pr5115.reference",
    test_module = ":Pr5115",
    timeout  = "short"
)

test_module(
    name   = "Pr5115",
    struct = "pr5115.ml",
    stdlib_deps   = [
        "//stdlib:Stdlib.Bigarray",
        "//stdlib:Stdlib.Printf"
    ]
)

expect_test(
    name     = "Weak_bigarray_test",
    stdout   = "weak_bigarray.stdout",
    expected = "weak_bigarray.reference",
    test_module = ":Weak_bigarray",
    timeout  = "short"
)

test_module(
    name   = "Weak_bigarray",
    struct = "weak_bigarray.ml",
    stdlib_deps   = [
        "//stdlib:Stdlib.Bigarray",
        "//stdlib:Stdlib.Gc",
        "//stdlib:Stdlib.Weak"
    ]
)

