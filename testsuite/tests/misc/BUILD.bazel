## GENERATED FILE ##

load("//test:rules.bzl",
     "ocaml_library",
     "ocaml_module",
)

MODULE_OPTS = ["-nostdlib"]

ocaml_library(
    name = "testsuite_tests_misc_lib",
    manifest  = [
        ":Bdd",
        ":Boyer",
        ":Ephe_infix",
        ":Ephe_issue9391",
        ":Ephetest",
        ":Ephetest2",
        ":Ephetest3",
        ":Exotic",
        ":Fib",
        ":Finaliser",
        ":Gcwords",
        ":Gpr1370",
        ":Hamming",
        ":Nucleic",
        ":Pr7168",
        ":Sieve",
        ":Sorts",
        ":Takc",
        ":Taku",
        ":Weaklifetime",
        ":Weaklifetime2",
        ":Weaktest",
    ],
)

ocaml_module(
    name   = "Bdd",
    struct = "bdd.ml",
    opts = MODULE_OPTS,
    deps   = [
    ]
)

ocaml_module(
    name   = "Boyer",
    struct = "boyer.ml",
    opts = MODULE_OPTS,
    deps   = [
    ]
)

ocaml_module(
    name   = "Ephe_infix",
    struct = "ephe_infix.ml",
    opts = MODULE_OPTS,
    deps   = [
    ]
)

ocaml_module(
    name   = "Ephe_issue9391",
    struct = "ephe_issue9391.ml",
    opts = MODULE_OPTS,
    deps   = [
    ]
)

ocaml_module(
    name   = "Ephetest",
    struct = "ephetest.ml",
    opts = MODULE_OPTS,
    deps   = [
    ]
)

ocaml_module(
    name   = "Ephetest2",
    struct = "ephetest2.ml",
    opts = MODULE_OPTS,
    deps   = [
    ]
)

ocaml_module(
    name   = "Ephetest3",
    struct = "ephetest3.ml",
    opts = MODULE_OPTS,
    deps   = [
    ]
)

ocaml_module(
    name   = "Exotic",
    struct = "exotic.ml",
    opts = MODULE_OPTS,
    deps   = [
    ]
)

ocaml_module(
    name   = "Fib",
    struct = "fib.ml",
    opts = MODULE_OPTS,
    deps   = [
    ]
)

ocaml_module(
    name   = "Finaliser",
    struct = "finaliser.ml",
    opts = MODULE_OPTS,
    deps   = [
    ]
)

ocaml_module(
    name   = "Gcwords",
    struct = "gcwords.ml",
    opts = MODULE_OPTS,
    deps   = [
    ]
)

ocaml_module(
    name   = "Gpr1370",
    struct = "gpr1370.ml",
    opts = MODULE_OPTS,
    deps   = [
    ]
)

ocaml_module(
    name   = "Hamming",
    struct = "hamming.ml",
    opts = MODULE_OPTS,
    deps   = [
    ]
)

ocaml_module(
    name   = "Nucleic",
    struct = "nucleic.ml",
    opts = MODULE_OPTS,
    deps   = [
    ]
)

ocaml_module(
    name   = "Pr7168",
    struct = "pr7168.ml",
    opts = MODULE_OPTS,
    deps   = [
    ]
)

ocaml_module(
    name   = "Sieve",
    struct = "sieve.ml",
    opts = MODULE_OPTS,
    deps   = [
    ]
)

ocaml_module(
    name   = "Sorts",
    struct = "sorts.ml",
    opts = MODULE_OPTS,
    deps   = [
    ]
)

ocaml_module(
    name   = "Takc",
    struct = "takc.ml",
    opts = MODULE_OPTS,
    deps   = [
    ]
)

ocaml_module(
    name   = "Taku",
    struct = "taku.ml",
    opts = MODULE_OPTS,
    deps   = [
    ]
)

ocaml_module(
    name   = "Weaklifetime",
    struct = "weaklifetime.ml",
    opts = MODULE_OPTS,
    deps   = [
    ]
)

ocaml_module(
    name   = "Weaklifetime2",
    struct = "weaklifetime2.ml",
    opts = MODULE_OPTS,
    deps   = [
    ]
)

ocaml_module(
    name   = "Weaktest",
    struct = "weaktest.ml",
    opts = MODULE_OPTS,
    deps   = [
    ]
)

