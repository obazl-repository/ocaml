load("//bzl:rules.bzl",
     "bootstrap_module",
     "bootstrap_signature",
     "bootstrap_library",
)

load("//config:BUILD.bzl", "ROOT_MODULE_OPTS", "ROOT_SIG_OPTS")

MODULE_OPTS = ROOT_MODULE_OPTS
SIG_OPTS = ROOT_SIG_OPTS

STDLIB = ["//stdlib"]

bootstrap_library(
    name = "file_formats",
    manifest  = [
        ":Cmi_format",
        ":Cmt_format",
        ":Linear_format",
    ],
    #     ":Cmo_format_cmi",
    #     ":Cmx_format_cmi",
    #     ":Cmxs_format_cmi",
)

bootstrap_module(
    name   = "Cmi_format",
    struct = "cmi_format.ml",
    sig    = "Cmi_format_cmi",
    opts = MODULE_OPTS,
    deps   = STDLIB + [
        ## (String)
        ## (Misc)
        ## (Location)
        ## (Format)
        ## (Digest)
        ## (Config)
    ],
    visibility = ["//typing:__pkg__"]
)

bootstrap_signature(
    name = "Cmi_format_cmi",
    src  = "cmi_format.mli",
    opts = SIG_OPTS,
    deps   = STDLIB + [
        "//typing:Types",
        "//utils:Misc"
        ## (Format)
        ## (Digest)
    ],
    visibility = [
        "//bytecomp:__pkg__",
        "//typing:__pkg__"
    ]
)

bootstrap_signature(
    name = "Cmo_format_cmi",
    src  = "cmo_format.mli",
    opts = SIG_OPTS,
    deps   = STDLIB + [
        "//utils:Misc_cmi",
        ## (Ident)
        "//lambda:Lambda"
    ],
    visibility = ["//bytecomp:__pkg__"]
)

bootstrap_module(
    name   = "Cmt_format",
    struct = "cmt_format.ml",
    sig    = "Cmt_format_cmi",
    opts = MODULE_OPTS,
    deps   = STDLIB + [
        ":Cmi_format", ## (File_formats Cmi_format)
        ## (Types)
        ## (Typedtree)
        "//typing:Tast_mapper",
        ## (Sys)
        ## (String)
        ## (Option)
        ## (Misc)
        ## (Location)
        ## (Load_path)
        ## (List)
        "//parsing:Lexer"  ## NB: not //lex:Lexer!
        ## (Env)
        ## (Digest)
        ## (Config)
        ## (Clflags)
        ## (Array)
    ],
    visibility = ["//typing:__pkg__"]
)

bootstrap_signature(
    name = "Cmt_format_cmi",
    src  = "cmt_format.mli",
    opts = SIG_OPTS,
    deps   = STDLIB + [
        ":Cmi_format", ## (File_formats Cmi_format)
        ## (Types)
        "//typing:Typedtree_cmi"
        ## (Misc)
        ## (Location)
        ## (Env)
        ## (Digest)
    ]
)

bootstrap_signature(
    name = "Cmx_format_cmi",
    src  = "cmx_format.mli",
    opts = SIG_OPTS,
    deps   = STDLIB + [
        "//utils:Misc_cmi",
        "//middle_end/flambda:Export_info_cmi",
        ## (Digest)
        "//middle_end:Clambda_cmi"
    ],
    visibility = ["//middle_end:__pkg__"]
)

bootstrap_signature(
    name = "Cmxs_format_cmi",
    src  = "cmxs_format.mli",
    opts = SIG_OPTS,
    deps   = STDLIB + [
        ## (Misc)
        ## (Digest)
    ]
)

bootstrap_module(
    name   = "Linear_format",
    struct = "linear_format.ml",
    sig    = "Linear_format_cmi",
    opts = MODULE_OPTS,
    deps   = STDLIB + [
        ## (String)
        ## (Misc)
        ## (Location)
        ## (Linear)
        ## (Format)
        ## (Digest)
        ## (Config)
        ## (Cmm)
    ]
)

bootstrap_signature(
    name = "Linear_format_cmi",
    src  = "linear_format.mli",
    opts = SIG_OPTS,
    deps   = STDLIB + [
        "//asmcomp:Linear_cmi"
        ## (Digest)
        ## (Cmm)
    ]
)

