load("//bzl:rules.bzl",
     "compiler_module",
     "compiler_signature",
     "boot_library",
)

load("//config:CONFIG.bzl",
     "OC_COMMON_CFLAGS",
     "PLATFORM_CFLAGS"
     # "ROOT_MODULE_OPTS", "ROOT_SIG_OPTS"
     )

MODULE_OPTS = OC_COMMON_CFLAGS + PLATFORM_CFLAGS
SIG_OPTS    = OC_COMMON_CFLAGS + PLATFORM_CFLAGS

# MODULE_OPTS = ROOT_MODULE_OPTS
# SIG_OPTS = ROOT_SIG_OPTS

exports_files([
    "cmi_format.mli", "cmi_format.ml",
    "cmo_format.mli",
    "cmxs_format.mli"
])

################################################################
boot_library(
    name = "file_formats",
    manifest  = [
        ":Cmi_format",
        ":Cmt_format",
        ":Linear_format",
    ],
)

## defined in compilerlibs/Makefile.compilerlibs as COMP_CMI WARNING:
## these should NOT be listed in COMP or COMP_CMI, since they are deps
## of the other stuff listed there. E.g. the file_formats cmi deps in
## COMP are actually direct deps of the bytecode modules also listed
## in COMP. So they are not needed as direct deps of ocamlcommon.
## Similarly, the Cmi/Cmt format modules are deps of modules in
## typing.
boot_library(
    name = "ocamlcommon",
    manifest  = [
        ":Cmi_format",
        ":Cmt_format",
        # ":Cmo_format_cmi",
        # ":Cmx_format_cmi",
        # ":Cmxs_format_cmi",
    ],
    visibility = ["//compilerlibs:__pkg__"]
)

compiler_module(
    name   = "Cmi_format",
    struct = "cmi_format.ml",
    sig    = "Cmi_format_cmi",
    opts = MODULE_OPTS,
    deps   = [
        "//typing:Types",
        "//stdlib:Stdlib.String",
        "//utils:Misc",
        "//parsing:Location",
        "//stdlib:Stdlib.Format",
        "//stdlib:Stdlib.Digest",
        "//config:Config",
    ],
    visibility = [
        "//otherlibs/dynlink:__pkg__",
        "//tools:__pkg__",
        "//typing:__pkg__"
    ]
)

compiler_signature(
    name = "Cmi_format_cmi",
    src  = "cmi_format.mli",
    opts = SIG_OPTS,
    deps   = [
        "//typing:Types_cmi",
        "//utils:Misc_cmi",
        "//stdlib:Stdlib.Format_cmi",
        "//stdlib:Stdlib.Digest_cmi",
    ],
    visibility = [
        "//bytecomp:__pkg__",
        "//tools:__pkg__",
        "//typing:__pkg__"
    ]
)

compiler_signature(
    name = "Cmo_format_cmi",
    src  = "cmo_format.mli",
    opts = SIG_OPTS,
    deps   = [
        "//utils:Misc_cmi",
        "//typing:Ident_cmi",
        "//lambda:Lambda_cmi"
    ],
    visibility = [
        "//bytecomp:__pkg__",
        "//ocamltest:__pkg__",
        "//otherlibs/dynlink:__pkg__",
        "//tools:__pkg__",
        "//toplevel:__pkg__",
    ]
)

compiler_module(
    name   = "Cmt_format",
    struct = "cmt_format.ml",
    sig    = "Cmt_format_cmi",
    opts = MODULE_OPTS,
    deps   = [
        ":Cmi_format", ## (File_formats Cmi_format)
        "//typing:Types",
        "//typing:Typedtree",
        "//typing:Tast_mapper",
        "//stdlib:Stdlib.Sys",
        "//stdlib:Stdlib.String",
        "//stdlib:Stdlib.Option",
        "//utils:Misc",
        "//parsing:Location",
        "//utils:Load_path",
        "//stdlib:Stdlib.List",
        "//parsing:Lexer",
        "//typing:Env",
        "//stdlib:Stdlib.Digest",
        "//config:Config",
        "//utils:Clflags",
        "//stdlib:Stdlib.Array",
    ],
    visibility = [
        "//tools:__pkg__",
        "//typing:__pkg__"
    ]
)

compiler_signature(
    name = "Cmt_format_cmi",
    src  = "cmt_format.mli",
    opts = SIG_OPTS,
    deps   = [
        ":Cmi_format_cmi",
        "//typing:Types_cmi",
        "//typing:Typedtree_cmi",
        "//utils:Misc_cmi",
        "//parsing:Location_cmi",
        "//typing:Env_cmi",
        "//stdlib:Stdlib.Digest_cmi",
    ],
    visibility = [
        "//tools:__pkg__",
    ]
)

compiler_signature(
    name = "Cmx_format_cmi",
    src  = "cmx_format.mli",
    opts = SIG_OPTS,
    deps   = [
        "//utils:Misc_cmi",
        "//middle_end/flambda:Export_info_cmi",
        "//stdlib:Stdlib.Digest_cmi",
        "//middle_end:Clambda_cmi"
    ],
    visibility = [
        "//asmcomp:__pkg__",
        "//middle_end:__pkg__",
        "//tools:__pkg__",
    ]
)

compiler_signature(
    name = "Cmxs_format_cmi",
    src  = "cmxs_format.mli",
    opts = SIG_OPTS,
    deps   = [
        "//utils:Misc_cmi",
        "//stdlib:Stdlib.Digest_cmi"
    ],
    visibility = [
        "//asmcomp:__pkg__",
        "//otherlibs/dynlink:__pkg__",
        "//tools:__pkg__",
    ]
)

compiler_module(
    name   = "Linear_format",
    struct = "linear_format.ml",
    sig    = "Linear_format_cmi",
    opts = MODULE_OPTS,
    deps   = [
        "//stdlib:Stdlib.String",
        "//utils:Misc",
        "//parsing:Location",
        "//asmcomp:Linear",
        "//stdlib:Stdlib.Format",
        "//stdlib:Stdlib.Digest",
        "//config:Config",
        "//asmcomp:Cmm"
    ],
    visibility = ["//asmcomp:__pkg__"]
)

compiler_signature(
    name = "Linear_format_cmi",
    src  = "linear_format.mli",
    opts = SIG_OPTS,
    deps   = [
        "//asmcomp:Linear_cmi",
        "//stdlib:Stdlib.Digest_cmi",
        "//asmcomp:Cmm_cmi"
    ]
)

