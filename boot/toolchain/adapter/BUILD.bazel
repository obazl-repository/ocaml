exports_files(["BUILD.bazel"])

load(":BUILD.bzl", "toolchain_adapter", "stdlib_toolchain_adapter")

##################
toolchain_adapter(
    name        = "boot",
    build_host  = "boot",
    compiler    = "//boot:ocamlc.byte",
    lexer       = "//boot:ocamllex.byte",
    # yaccer      = "//yacc:ocamlyacc",
    ##FIXME: ocamlrun not needed, it's embedded in the .boot tools
    # runtime = "//boot:ocamlrun.boot",  # alias to //runtime:ocamlrun
    copts       = [ ## compile opts (sigs/modules only)
        "-strict-sequence",
        # "-warn-error", "+A",
        # "-nostdlib",  ## inserted by rule
    ] + select({
        "//config:bin-annot?" : ["-bin-annot"],
        "//conditions:default": []
    }) + select({
        "//config:principal?" : ["-principal"],
        "//conditions:default": []
    }) + select({
        "//config:absname?" : ["-absname"],
        "//conditions:default": []
    }),
    linkopts    = [],
    # warnings  - use defaults
    # primitives  = "//runtime:primitives",
)

##################
toolchain_adapter(
    name        = "baseline",
    build_host  = "baseline",
    # target_host = "baseline",
    compiler    = "//boot:ocamlc.byte",
    # lexer       = "//lex:ocamllex",
    # yaccer      = "//yacc:ocamlyacc",
    ##FIXME: ocamlrun not needed, it's embedded in the .boot tools
    # runtime = "//boot:ocamlrun.boot",  # alias to //runtime:ocamlrun
    copts       = [ ## compile opts (sigs/modules only)
        "-strict-sequence",
        # "-warn-error", "+A",
        "-nostdlib",
    ] + select({
        "//config:bin-annot?" : ["-bin-annot"],
        "//conditions:default": []
    }) + select({
        "//config:principal?" : ["-principal"],
        "//conditions:default": []
    }) + select({
        "//config:absname?" : ["-absname"],
        "//conditions:default": []
    }),
    linkopts    = [],
    # warnings  - use defaults
    # primitives  = "//runtime:primitives",
)

##################
toolchain_adapter(
    name        = "dev",
    build_host  = "dev",
    # target_host = "baseline",
    compiler    = "//boot/baseline:ocamlc.byte",
    # lexer       = "//lex:ocamllex",
    # yaccer      = "//yacc:ocamlyacc",
    ##FIXME: ocamlrun not needed, it's embedded in the .boot tools
    # runtime = "//boot:ocamlrun.boot",  # alias to //runtime:ocamlrun
    copts       = [ ## compile opts (sigs/modules only)
        "-strict-sequence",
        # "-warn-error", "+A",
        "-nostdlib",
    ] + select({
        "//config:bin-annot?" : ["-bin-annot"],
        "//conditions:default": []
    }) + select({
        "//config:principal?" : ["-principal"],
        "//conditions:default": []
    }) + select({
        "//config:absname?" : ["-absname"],
        "//conditions:default": []
    }),
    linkopts    = [],
    # warnings  - use defaults
    # primitives  = "//runtime:primitives",
)

################################################################
##################
stdlib_toolchain_adapter(
    name        = "stdlib",
    build_host  = "stdib",
    # target_host = "stdlib",
)


