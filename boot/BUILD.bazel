load("//bzl:rules.bzl",
     "bootstrap_archive",
     "bootstrap_ocamlc",
     "bootstrap_library")

exports_files(["ocamlc",
               "ocamllex"])

# alias(
#     name = "boot.ocamlc",
#     actual = "ocamlc"
# )

## The makefiles copy stuff into boot and make it accessible to build
## targets by passing '-I boot'. OBazl does not (need to) do that.
## Instead we define a library target that aggregates the same
## resources by label, so targets can depend on '//boot:stdlib'. NB:
## the only difference between //stdlib and //boot:stdlib is that the
## latter includes //stdlib:Std_exit and //stdlib:camlheader.

## root Makefile:
# The bytecode compiler
# ocamlc$(EXE): compilerlibs/ocamlcommon.cma \
#               compilerlibs/ocamlbytecomp.cma $(BYTESTART)
# 	$(CAMLC) $(LINKFLAGS) -compat-32 -o $@ $^
bootstrap_ocamlc(
    name = "boot.ocamlc",
    # exe  = "ocamlc",
    opts = ["-compat-32"],
    deps = [
        "//compilerlibs:ocamlcommon",
        "//compilerlibs:ocamlbytecomp"
    ],
    visibility = ["//visibility:public"]
)
