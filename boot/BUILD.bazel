package(default_visibility = ["//visibility:public"])

exports_files(["ocamllex"])

## Package //boot contains pre-compiled OCaml executables (ocamlc,
## ocamllex) and aliases to native C executables (ocamlrun, ocamlyacc).

alias(
    name   = "ocamlrun.boot",
    actual = "//runtime:ocamlrun"
)

sh_binary(
    name = "ocamlc.boot",
    srcs = ["ocamlc.sh"],
    data = [
        ":ocamlc",
        ":ocamlrun.boot",
        "//stdlib:camlheaders", # genrule, no dep on ocamlc.
        # We cannot depend on Std_exit on pain of circularity.
        # It depends on Stdlib, which is compiled by this tool.
        # "//stdlib:Std_exit"
    ],
    deps = [
         # for the runfiles lib used in ocamlc.sh:
        "@bazel_tools//tools/bash/runfiles"
    ]
)

sh_binary(
    name = "ocamllex.boot",
    srcs = ["ocamllex.sh"],
    data = [
        ":ocamllex",
        ":ocamlrun.boot"
    ],
    deps = ["@bazel_tools//tools/bash/runfiles"]
)

# ocamlyacc is written in C, so no ocamlyacc.opt.
alias(
    name   = "ocamlyacc.boot",
    actual = "//yacc:ocamlyacc"
)
