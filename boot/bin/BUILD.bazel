## Package //boot/bin contains targets bootstrapped from the tools in
## package //boot.

package(default_visibility = ["//visibility:public"])

load("//bzl:rules.bzl",
     "boot_archive",
     "boot_compiler",
     "baseline_module")

load("//bzl/rules/macros:compiler.bzl", "compiler")
load("//bzl/rules/macros:lexer.bzl", "lexer")
load("//bzl/rules/macros:stdlib.bzl", "stdlib")

compiler(
    name  = "ocamlc.byte",
    stage = "baseline",  ## depends on boot toolchain
    build_host_constraints = [
        "//boot/constraints/executor:vm",
        "//boot/constraints/emitter:vm"
    ],
    target_host_constraints = [
        "//boot/constraints/executor:vm",
        "//boot/constraints/emitter:vm"
    ],
)

lexer(
    name  = "ocamllex.byte",
    stage = "baseline",
    build_host_constraints = [
        "//boot/constraints/executor:vm",
        "//boot/constraints/emitter:vm"
    ],
    target_host_constraints = [
        "//boot/constraints/executor:vm",
        "//boot/constraints/emitter:vm"
    ],
)

alias( # implemented in C, so no byte/opt versions.
    name   = "ocamlyacc",
    actual = "//yacc:ocamlyacc",
    target_compatible_with = ["//platforms/target:boot?"]
)

alias( # implemented in C, so no byte/opt versions.
    name   = "ocamlrun",
    actual = "//runtime:ocamlrun",
)

stdlib(stage  = "baseline")
