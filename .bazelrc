## put this in ~/.bazelrc to enable for all bazel projects
# build --incompatible_enable_cc_toolchain_resolution

build --toolchain_resolution_debug=.*
# build --toolchain_resolution_debug=@bazel_tools//tools/cpp:toolchain_type

#### alternate toolchain: pass tc and profile if needed

## macos > macos: use zig toolchain
## build --extra_toolchains=@zig_sdk//toolchain:darwin_amd64

## linux>linux: use zig
## zig on linux (amd) does not support some flags set by ./configre
## so we need to pass a customized tc profile
# build --extra_toolchains=@zig_sdk//toolchain:linux_amd64_gnu.2.28,//toolchain/profile/selector/cc/linux:zig

#### cross-builds: specify target platform and 1 toolchain per host (?)
#### plus target profile if needed (zig needs it)

### macos > linux using zig tc (requires custom tc profile)
# build --extra_toolchains=@zig_sdk//toolchain:linux_amd64_gnu.2.31,//toolchain/profile/selector/cc/linux:zig
# build --platforms=@zig_sdk//platform:linux_amd64

### linux > macos using zig
# build --extra_toolchains=@zig_sdk//toolchain:darwin_amd64,//toolchain/profile/selector/cc/macos
# build --platforms=@zig_sdk//platform:macos_amd64

################################################################
# build --action_env BAZEL_DO_NOT_DETECT_CPP_TOOLCHAIN=1
# build --action_env ZIG_SYSTEM_LINKER_HACK=1

## set cc opts for specific files:
# build --per_file_copt=

## put this in ~/.bazelrc to enable for all bazel projects
# common --color=yes

################################################################
## always stamp, it injects the absolute path of the workspace root
# https://docs.bazel.build/versions/main/user-manual.html#flag--workspace_status_command
build --stamp --workspace_status_command=$PWD/bzl/camlheader.sh

################################################################
## OCaml platforms: boot, vm, sys

build:boot --host_platform=//platforms/build:boot
build:boot --platforms=//platforms/target:boot

build:dev --host_platform=//platforms/build:dev
build:dev --platforms=//platforms/target:dev

build:vmvm --host_platform=//platforms:vm
build:vmvm --platforms=//platforms:vm

build:sysvm --host_platform=//platforms:sys
build:sysvm --platforms=//platforms:vm

build:vmsys --host_platform=//platforms:vm
build:vmsys --platforms=//platforms:sys

build:syssys --host_platform=//platforms:sys
build:syssys --platforms=//platforms:sys

################################################################
## enable debug for ocamlrun:
## build --//config/debug:ocamlrun

# build:stage1 --//bzl/toolchain:ocamlc=//compilers/stage1:ocamlc
# build:stage1 --//bzl:stage=0

# build:stage2 --//bzl/toolchain:ocamlc=//compilers/stage2:ocamlc
# build:stage2 --//bzl:stage=1


try-import .config/dev.bazelrc
try-import .config/user.bazelrc
